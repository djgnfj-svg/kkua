name: PR Check

on:
  pull_request:
    types: [opened, synchronize, reopened]

jobs:
  quick-check:
    name: Quick PR Validation
    runs-on: ubuntu-latest
    timeout-minutes: 10
    
    steps:
    - uses: actions/checkout@v4
    
    - name: Setup Node.js
      uses: actions/setup-node@v4
      with:
        node-version: '20.x'
        cache: 'npm'
        cache-dependency-path: frontend/package-lock.json
    
    - name: Setup Python
      uses: actions/setup-python@v5
      with:
        python-version: '3.11'
    
    - name: Frontend Quick Check
      working-directory: ./frontend
      run: |
        npm ci
        npm run lint
        npx tsc -b --noEmit
    
    - name: Backend Quick Check
      working-directory: ./backend
      run: |
        pip install flake8
        flake8 . --count --select=E9,F63,F7,F82 --show-source --statistics
    
    - name: Check for merge conflicts
      run: |
        if grep -rn "<<<<<<< HEAD" --include="*.py" --include="*.js" --include="*.jsx" --include="*.ts" --include="*.tsx" .; then
          echo "Merge conflicts detected!"
          exit 1
        fi
    
    - name: PR Comment with Status
      uses: actions/github-script@v7
      if: always()
      with:
        script: |
          const status = '${{ job.status }}';
          const emoji = status === 'success' ? '✅' : '❌';
          const message = `${emoji} **Quick Check ${status === 'success' ? 'Passed' : 'Failed'}**
          
          Frontend: ${{ steps.frontend-check.outcome || 'pending' }}
          Backend: ${{ steps.backend-check.outcome || 'pending' }}
          
          [View Full CI Results](https://github.com/${{ github.repository }}/actions/runs/${{ github.run_id }})`;
          
          github.rest.issues.createComment({
            issue_number: context.issue.number,
            owner: context.repo.owner,
            repo: context.repo.repo,
            body: message
          });